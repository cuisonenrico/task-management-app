// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:task_management_app/environment.dart';

/// Values are transferred to a secure environment file that is required to build this application.
/// This is to ensure that sensitives information such as keys and secrets are not exposed in the repository, and
/// to initialize this application/project with correct database reference and firebase console for authentication
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return Environment().WEB_ENV;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return Environment().ADR_ENV;
      case TargetPlatform.iOS:
        return Environment().IOS_ENV;
      case TargetPlatform.macOS:
        return Environment().MACOS_ENV;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
}
